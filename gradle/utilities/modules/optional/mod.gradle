//////////////////////////////////////////////////
// TITLE Mod
//////////////////////////////////////////////////

import java.util.regex.Pattern

import static java.io.File.separator


/* SECTION check */

apply from: "$utilitiesDir${separator}meta${separator}application.gradle"
checkApply.call(['makeSourceTasks', 'makeResourcesTasks', 'makeJUnitPlatformTests'])


/* SECTION extra variables */

ext {
    // COMMENT mod

    final List<String> requiredMods_ = stringToStringList.call(requiredMods_) as List<String>
    final List<String> dependencies__ = stringToStringList.call(dependencies__) as List<String>
    final List<String> dependants_ = stringToStringList.call(dependants_) as List<String>

    StringBuilder cdSb = new StringBuilder()
    requiredMods_.each { cdSb.append "required:$it;" }
    dependencies__.each {
        if (cdSb.contains(it as String)) cdSb.replaceFirst Pattern.quote("required:$it"), "required-after:$it"
        else cdSb.append "after:$it;"
    }
    dependants_.each {
        if (cdSb.contains(it as String)) cdSb.replaceFirst Pattern.quote("required:$it"), "required-before:$it"
        else cdSb.append "before:$it;"
    }
    dependenciesString = cdSb.append(dependenciesStringAdditions).toString()

    requiredMods = processResourcesList requiredMods_
    dependencies_ = processResourcesList dependencies__
    dependants = processResourcesList dependants_
}

static <E> String processResourcesList(List<E> l) {
    l.empty ? '[]' : l.toListString().replace('[', '["').replace(']', '"]').replace(', ', '", "')
}


/* SECTION configuration */

archivesBaseName = rootProject.name

makeSourceTasks.call { Task it ->
    //noinspection GrUnresolvedAccess
    it.inputs.properties([
            expand_modId                 : modId,
            expand_name                  : name_,
            expand_version               : version,
            expand_dependencies          : dependenciesString,
            expand_minecraftVersionRange : minecraftVersionRange,
            expand_certificateFingerprint: certificateFingerprint,
            expand_updateJSON            : updateJSON,
            expand_group                 : project.group
    ])
}

makeResourcesTasks.call { Task it ->
    //noinspection GrUnresolvedAccess
    it.inputs.properties([
            expand_modId           : modId,
            expand_name            : name_,
            expand_description     : project.description,
            expand_version         : version,
            expand_minecraftVersion: minecraft.version,
            expand_url             : url,
            expand_updateUrl       : updateUrl,
            expand_updateJSON      : updateJSON,
            expand_authorList      : authorList,
            expand_credits         : credits,
            expand_logoFile        : logoFile,
            expand_screenshots     : screenshots,
            expand_parent          : parent_,
            expand_requiredMods    : requiredMods,
            expand_dependencies    : dependencies_,
            expand_dependants      : dependants,
            expand_pack_format     : pack_format
    ])
}

makeJUnitPlatformTests.call()

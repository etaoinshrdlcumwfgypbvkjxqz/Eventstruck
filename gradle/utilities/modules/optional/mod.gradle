//////////////////////////////////////////////////
// TITLE Mod
//////////////////////////////////////////////////

import java.util.regex.Pattern

import static java.io.File.separator


/* SECTION check */

apply from: "$utilitiesDir${separator}meta${separator}application.gradle"
checkApply.call(['makeSourceTasks', 'makeResourcesTasks', 'makeJUnitPlatformTests'])


/* SECTION extra variables */

ext {
    // COMMENT mod

    final List<String> requiredMods_ = stringToStringList.call(requiredMods_) as List<String>
    final List<String> dependencies__ = stringToStringList.call(dependencies__) as List<String>
    final List<String> dependants_ = stringToStringList.call(dependants_) as List<String>

    StringBuilder cdSb = new StringBuilder()
    requiredMods_.each { cdSb.append "required:$it;" }
    dependencies__.each {
        if (cdSb.contains(it as String)) cdSb.replaceFirst Pattern.quote("required:$it"), "required-after:$it"
        else cdSb.append "after:$it;"
    }
    dependants_.each {
        if (cdSb.contains(it as String)) cdSb.replaceFirst Pattern.quote("required:$it"), "required-before:$it"
        else cdSb.append "before:$it;"
    }
    dependenciesString = cdSb.append(dependenciesStringAdditions).toString()

    requiredMods = processResourcesList requiredMods_
    dependencies_ = processResourcesList dependencies__
    dependants = processResourcesList dependants_
}

static <E> String processResourcesList(List<E> l) {
    l.empty ? '[]' : l.toListString().replace('[', '["').replace(']', '"]').replace(', ', '", "')
}


/* SECTION configuration */

archivesBaseName = rootProject.name

makeSourceTasks.call {
    it.inputs.property 'expand_modId', modId
    it.inputs.property 'expand_name', name_
    it.inputs.property 'expand_version', version
    it.inputs.property 'expand_dependencies', dependenciesString
    it.inputs.property 'expand_minecraftVersionRange', minecraftVersionRange
    it.inputs.property 'expand_certificateFingerprint', certificateFingerprint
    it.inputs.property 'expand_updateJSON', updateJSON
    it.inputs.property 'expand_group', project.group
}

makeResourcesTasks.call {
    it.inputs.property 'expand_modId', modId
    it.inputs.property 'expand_name', name_
    it.inputs.property 'expand_description', project.description
    it.inputs.property 'expand_version', version
    it.inputs.property 'expand_minecraftVersion', minecraft.version
    it.inputs.property 'expand_url', url
    it.inputs.property 'expand_updateUrl', updateUrl
    it.inputs.property 'expand_updateJSON', updateJSON
    it.inputs.property 'expand_authorList', authorList
    it.inputs.property 'expand_credits', credits
    it.inputs.property 'expand_logoFile', logoFile
    it.inputs.property 'expand_screenshots', screenshots
    it.inputs.property 'expand_parent', parent_
    it.inputs.property 'expand_requiredMods', requiredMods
    it.inputs.property 'expand_dependencies', dependencies_
    it.inputs.property 'expand_dependants', dependants
    it.inputs.property 'expand_pack_format', pack_format
}

makeJUnitPlatformTests.call()

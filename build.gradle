//////////////////////////////////////////////////
// TITLE Gradle Build Script
//////////////////////////////////////////////////

import java.util.regex.Pattern

import static java.io.File.separator

/* SECTION build script */

buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven {
            name = 'Minecraft Forge'
            url = 'https://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath "org.jetbrains.gradle.plugin.idea-ext:org.jetbrains.gradle.plugin.idea-ext.gradle.plugin:0.7"
    }
    // COMMENT Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
}


/* SECTION all projects */

configurations {
    debug {
        canBeResolved false
        canBeConsumed false
    }
    runtimeOnly.extendsFrom debug
}

allprojects {
    /* SECTION extra variables */

    ext {
        utilitiesDir = "$rootDir${separator}gradle${separator}utilities".toString()
        modulesDir = "$utilitiesDir${separator}modules".toString()
    }


    /* SECTION application */

    apply from: "$modulesDir${separator}plugins.gradle"

    apply from: "$utilitiesDir${separator}miscellaneous.gradle"
    apply from: "$utilitiesDir${separator}globals.gradle"
    apply from: "$utilitiesDir${separator}collections.gradle"
    apply from: "$utilitiesDir${separator}strings.gradle"
    apply from: "$utilitiesDir${separator}io${separator}io.gradle"
    apply from: "$utilitiesDir${separator}io${separator}properties${separator}properties.gradle"
    apply from: "$utilitiesDir${separator}io${separator}properties${separator}ext.properties.gradle"


    /* SECTION extra variables */

    loadExt.call "$projectDir${separator}module.properties"


    /* SECTION configuration */

    apply from: "$modulesDir${separator}versioning.gradle"
    apply from: "$modulesDir${separator}information.gradle"

    apply from: "$modulesDir${separator}configurations.gradle"
    apply from: "$modulesDir${separator}repositories.gradle"
    apply from: "$modulesDir${separator}dependencies.gradle"

    apply from: "$modulesDir${separator}source.gradle"
    apply from: "$modulesDir${separator}resources.gradle"
    apply from: "$modulesDir${separator}javadoc.gradle"

    apply from: "$modulesDir${separator}optional${separator}test.gradle"
    apply from: "$modulesDir${separator}jar.gradle"

    apply from: "$modulesDir${separator}optional${separator}ide.gradle"


    // COMMENT append
    afterEvaluate { storeExt.call() }
}

apply from: "$utilitiesDir${separator}throwable.gradle"

/* SECTION extra variables */

ext {
    // COMMENT game
    minecraftVersion = minecraftForgeVersion.split('-').first()
    String[] minecraftVersions = minecraftVersion.split Pattern.quote('.')
    minecraftVersionMajor = minecraftVersions.first().toInteger()
    minecraftVersionMinor = minecraftVersions[1].toInteger()
    // COMMENT mod
    modId = project.name
}

/* SECTION application */

apply from: "$modulesDir${separator}optional${separator}minecraft-forge.gradle"
apply from: "$modulesDir${separator}optional${separator}mod.gradle"
apply from: "$modulesDir${separator}optional${separator}api.gradle"
apply from: "$modulesDir${separator}optional${separator}publishing.gradle"

/* SECTION configuration */

afterEvaluate {
    Project pSub = project(subprojectMain)
    if (pSub != project) {
        evaluationDependsOn subprojectMain
        pSub.tasks.each {
            Task t = tasks.findByName(it.name)
            if (t != null) {
                t.dependsOn it
                t.configure { enabled false }
            } else task it.name, dependsOn: it
        }
    }
}
